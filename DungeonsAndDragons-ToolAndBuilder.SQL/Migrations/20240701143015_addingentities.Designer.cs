// <auto-generated />
using System;
using DungeonsAndDragons_ToolAndBuilder.SQL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DungeonsAndDragons_ToolAndBuilder.SQL.Migrations
{
    [DbContext(typeof(DnDbContext))]
    [Migration("20240701143015_addingentities")]
    partial class addingentities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Alignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<int>("MonsterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("" +
                                    "NpcId" +
                                    "" +
                                    "" +
                                    "" +
                                    "" +
                                    "")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.HasIndex("MonsterId")
                        .IsUnique();

                    b.HasIndex("NpcId")
                        .IsUnique();

                    b.ToTable("Alignments");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Armor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArmorClass")
                        .HasColumnType("int");

                    b.Property<Guid>("ArmorGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ArmorImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArmorPiece")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArmorType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Cost")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<string>("MagicalEffects")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rarity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Armors");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ArmorClass")
                        .HasColumnType("int");

                    b.Property<Guid>("CharacterGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CharacterImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Charisma")
                        .HasColumnType("int");

                    b.Property<int?>("Constitution")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentHitPoints")
                        .HasColumnType("int");

                    b.Property<int?>("DeathSaveFailures")
                        .HasColumnType("int");

                    b.Property<int?>("DeathSaveSuccesses")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Dexterity")
                        .HasColumnType("int");

                    b.Property<int?>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("HitDice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HitPointsMax")
                        .HasColumnType("int");

                    b.Property<int?>("Initiative")
                        .HasColumnType("int");

                    b.Property<int?>("Intelligence")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDead")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProficiencyBonus")
                        .HasColumnType("int");

                    b.Property<string>("Speed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Strength")
                        .HasColumnType("int");

                    b.Property<int?>("TemporaryHitPoints")
                        .HasColumnType("int");

                    b.Property<int?>("Wisdom")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("ClassImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NpcId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.HasIndex("NpcId")
                        .IsUnique();

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.ClassFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<int>("LevelRequirement")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.ToTable("ClassFeatures");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Condition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<int>("MonsterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NpcId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("MonsterId");

                    b.HasIndex("NpcId");

                    b.ToTable("Conditions");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Consumable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ConsumableGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConsumableType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Cost")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Effect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rarity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Consumables");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Crafting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Craftings");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.DamageType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<int>("MonsterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NpcId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("MonsterId");

                    b.HasIndex("NpcId");

                    b.ToTable("DamageTypes");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.DungeonMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DmNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DungeonMasters");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DungeonMasterId")
                        .HasColumnType("int");

                    b.Property<string>("EventImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DungeonMasterId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Faction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<int>("MonsterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NpcId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.HasIndex("MonsterId")
                        .IsUnique();

                    b.HasIndex("NpcId")
                        .IsUnique();

                    b.ToTable("Factions");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Feat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NpcId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("NpcId");

                    b.ToTable("Feats");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.GameAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("Damage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsClassSpecific")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLegendary")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMonsterSpecific")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNpcSpecific")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRaceSpecific")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStandardAction")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubClassSpecific")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubRaceSpecific")
                        .HasColumnType("bit");

                    b.Property<int>("MonsterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NpcId")
                        .HasColumnType("int");

                    b.Property<string>("Range")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("MonsterId");

                    b.HasIndex("NpcId");

                    b.ToTable("GameActions");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Heirloom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HeirloomGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelatedAdventure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Heirlooms");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Journal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DungeonMasterId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.HasIndex("DungeonMasterId")
                        .IsUnique();

                    b.ToTable("Journals");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MonsterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NpcId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("MonsterId");

                    b.HasIndex("NpcId");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DungeonMasterId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<string>("LocationUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelatedAdventure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DungeonMasterId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.MagicalArtifact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Cost")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<Guid>("MagicalArtifactGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("MagicalArtifacts");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.MiscellaneousItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MiscellaneousItemGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("MiscellaneousItems");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Monster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ArmorClass")
                        .HasColumnType("int");

                    b.Property<int>("ChallengeRating")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExperiencePoints")
                        .HasColumnType("int");

                    b.Property<string>("HitDice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HitPoints")
                        .HasColumnType("int");

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Speed")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Monsters");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.MonsterTrait", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<int>("MonsterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MonsterId");

                    b.ToTable("MonsterTraits");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.MonsterType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<int>("MonsterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MonsterId")
                        .IsUnique();

                    b.ToTable("MonsterTypes");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Npc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ArmorClass")
                        .HasColumnType("int");

                    b.Property<string>("CharacterImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Charisma")
                        .HasColumnType("int");

                    b.Property<int?>("Constitution")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentHitPoints")
                        .HasColumnType("int");

                    b.Property<int?>("DeathSaveFailures")
                        .HasColumnType("int");

                    b.Property<int?>("DeathSaveSuccesses")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Dexterity")
                        .HasColumnType("int");

                    b.Property<int?>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("HitDice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HitPointsMax")
                        .HasColumnType("int");

                    b.Property<int?>("Initiative")
                        .HasColumnType("int");

                    b.Property<int?>("Intelligence")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDead")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProficiencyBonus")
                        .HasColumnType("int");

                    b.Property<string>("Speed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Strength")
                        .HasColumnType("int");

                    b.Property<int?>("TemporaryHitPoints")
                        .HasColumnType("int");

                    b.Property<int?>("Wisdom")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Npcs");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Proficiency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NpcId")
                        .HasColumnType("int");

                    b.Property<int>("ProficiencyId")
                        .HasColumnType("int");

                    b.Property<string>("RelatedAbilityScoreBonus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SkillBonus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("NpcId");

                    b.ToTable("Proficiencies");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.ProficiencyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProficiencyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProficiencyId")
                        .IsUnique();

                    b.ToTable("ProficiencyTypes");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.QuestItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("QuestItemGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("QuestItems");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Race", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NpcId")
                        .HasColumnType("int");

                    b.Property<string>("RaceImg")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.HasIndex("NpcId")
                        .IsUnique();

                    b.ToTable("Races");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.RacialTrait", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RaceId")
                        .HasColumnType("int");

                    b.Property<string>("RaceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RaceId");

                    b.ToTable("RacialTraits");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Reaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<int>("MonsterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NpcId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("MonsterId");

                    b.HasIndex("NpcId");

                    b.ToTable("Reactions");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Sense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<int>("MonsterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NpcId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("MonsterId");

                    b.HasIndex("NpcId");

                    b.ToTable("Senses");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.SideQuest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DungeonMasterId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RecommendedLevel")
                        .HasColumnType("int");

                    b.Property<string>("Reward")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DungeonMasterId");

                    b.ToTable("SideQuests");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<int>("MonsterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NpcId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.HasIndex("MonsterId")
                        .IsUnique();

                    b.HasIndex("NpcId")
                        .IsUnique();

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Bonus")
                        .HasColumnType("int");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<string>("Modifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MonsterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NpcId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("MonsterId");

                    b.HasIndex("NpcId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.SubClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NpcId")
                        .HasColumnType("int");

                    b.Property<string>("SubClassImg")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.HasIndex("NpcId")
                        .IsUnique();

                    b.ToTable("SubClasses");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.SubClassFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubClassId")
                        .HasColumnType("int");

                    b.Property<string>("SubClassName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubClassId");

                    b.ToTable("SubClassFeatures");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.SubRace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NpcId")
                        .HasColumnType("int");

                    b.Property<string>("SubRaceImg")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.HasIndex("NpcId")
                        .IsUnique();

                    b.ToTable("SubRaces");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.SubRacialTrait", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubRaceId")
                        .HasColumnType("int");

                    b.Property<string>("SubRaceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubRaceId");

                    b.ToTable("SubRacialTraits");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Cost")
                        .HasColumnType("float");

                    b.Property<string>("Damage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Properties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rarity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("WeaponGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WeaponType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.World", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPre5E")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorldUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Worlds");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Alignment", b =>
                {
                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Character", null)
                        .WithOne("Alignment")
                        .HasForeignKey("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Alignment", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Monster", null)
                        .WithOne("Alignment")
                        .HasForeignKey("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Alignment", "MonsterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Npc", null)
                        .WithOne("Alignment")
                        .HasForeignKey("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Alignment", "NpcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Class", b =>
                {
                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Character", null)
                        .WithOne("Class")
                        .HasForeignKey("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Class", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Npc", null)
                        .WithOne("Class")
                        .HasForeignKey("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Class", "NpcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.ClassFeature", b =>
                {
                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Class", null)
                        .WithMany("ClassFeatures")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Condition", b =>
                {
                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Character", null)
                        .WithMany("Conditions")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Monster", null)
                        .WithMany("Conditions")
                        .HasForeignKey("MonsterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Npc", null)
                        .WithMany("Conditions")
                        .HasForeignKey("NpcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.DamageType", b =>
                {
                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Character", null)
                        .WithMany("DamageTypes")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Monster", null)
                        .WithMany("DamageTypes")
                        .HasForeignKey("MonsterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Npc", null)
                        .WithMany("DamageTypes")
                        .HasForeignKey("NpcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Event", b =>
                {
                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.DungeonMaster", null)
                        .WithMany("Events")
                        .HasForeignKey("DungeonMasterId");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Faction", b =>
                {
                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Character", null)
                        .WithOne("Faction")
                        .HasForeignKey("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Faction", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Monster", null)
                        .WithOne("Faction")
                        .HasForeignKey("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Faction", "MonsterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Npc", null)
                        .WithOne("Faction")
                        .HasForeignKey("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Faction", "NpcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Feat", b =>
                {
                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Character", null)
                        .WithMany("Feats")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Npc", null)
                        .WithMany("Feats")
                        .HasForeignKey("NpcId");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.GameAction", b =>
                {
                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Character", null)
                        .WithMany("Actions")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Monster", null)
                        .WithMany("Actions")
                        .HasForeignKey("MonsterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Npc", null)
                        .WithMany("Actions")
                        .HasForeignKey("NpcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Journal", b =>
                {
                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Character", null)
                        .WithOne("Journal")
                        .HasForeignKey("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Journal", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.DungeonMaster", null)
                        .WithOne("Journal")
                        .HasForeignKey("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Journal", "DungeonMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Language", b =>
                {
                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Character", null)
                        .WithMany("Languages")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Monster", null)
                        .WithMany("Languages")
                        .HasForeignKey("MonsterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Npc", null)
                        .WithMany("Languages")
                        .HasForeignKey("NpcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Location", b =>
                {
                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.DungeonMaster", null)
                        .WithMany("Locations")
                        .HasForeignKey("DungeonMasterId");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.MonsterTrait", b =>
                {
                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Monster", null)
                        .WithMany("Traits")
                        .HasForeignKey("MonsterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.MonsterType", b =>
                {
                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Monster", null)
                        .WithOne("MonsterType")
                        .HasForeignKey("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.MonsterType", "MonsterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Proficiency", b =>
                {
                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Character", null)
                        .WithMany("Proficiencies")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Npc", null)
                        .WithMany("Proficiencies")
                        .HasForeignKey("NpcId");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.ProficiencyType", b =>
                {
                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Proficiency", null)
                        .WithOne("ProficiencyType")
                        .HasForeignKey("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.ProficiencyType", "ProficiencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Race", b =>
                {
                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Character", null)
                        .WithOne("Race")
                        .HasForeignKey("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Race", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Npc", null)
                        .WithOne("Race")
                        .HasForeignKey("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Race", "NpcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.RacialTrait", b =>
                {
                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Race", null)
                        .WithMany("RacialTraits")
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Reaction", b =>
                {
                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Character", null)
                        .WithMany("Reactions")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Monster", null)
                        .WithMany("Reactions")
                        .HasForeignKey("MonsterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Npc", null)
                        .WithMany("Reactions")
                        .HasForeignKey("NpcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Sense", b =>
                {
                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Character", null)
                        .WithMany("Senses")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Monster", null)
                        .WithMany("Senses")
                        .HasForeignKey("MonsterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Npc", null)
                        .WithMany("Senses")
                        .HasForeignKey("NpcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.SideQuest", b =>
                {
                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.DungeonMaster", null)
                        .WithMany("SideQuests")
                        .HasForeignKey("DungeonMasterId");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Size", b =>
                {
                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Character", null)
                        .WithOne("Size")
                        .HasForeignKey("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Size", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Monster", null)
                        .WithOne("Size")
                        .HasForeignKey("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Size", "MonsterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Npc", null)
                        .WithOne("Size")
                        .HasForeignKey("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Size", "NpcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Skill", b =>
                {
                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Character", null)
                        .WithMany("Skills")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Monster", null)
                        .WithMany("Skills")
                        .HasForeignKey("MonsterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Npc", null)
                        .WithMany("Skills")
                        .HasForeignKey("NpcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.SubClass", b =>
                {
                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Character", null)
                        .WithOne("SubClass")
                        .HasForeignKey("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.SubClass", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Npc", null)
                        .WithOne("SubClass")
                        .HasForeignKey("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.SubClass", "NpcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.SubClassFeature", b =>
                {
                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.SubClass", null)
                        .WithMany("SubClassFeatures")
                        .HasForeignKey("SubClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.SubRace", b =>
                {
                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Character", null)
                        .WithOne("SubRace")
                        .HasForeignKey("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.SubRace", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Npc", null)
                        .WithOne("SubRace")
                        .HasForeignKey("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.SubRace", "NpcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.SubRacialTrait", b =>
                {
                    b.HasOne("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.SubRace", null)
                        .WithMany("SubRacialTraits")
                        .HasForeignKey("SubRaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Character", b =>
                {
                    b.Navigation("Actions");

                    b.Navigation("Alignment");

                    b.Navigation("Class");

                    b.Navigation("Conditions");

                    b.Navigation("DamageTypes");

                    b.Navigation("Faction");

                    b.Navigation("Feats");

                    b.Navigation("Journal");

                    b.Navigation("Languages");

                    b.Navigation("Proficiencies");

                    b.Navigation("Race");

                    b.Navigation("Reactions");

                    b.Navigation("Senses");

                    b.Navigation("Size");

                    b.Navigation("Skills");

                    b.Navigation("SubClass");

                    b.Navigation("SubRace");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Class", b =>
                {
                    b.Navigation("ClassFeatures");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.DungeonMaster", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Journal");

                    b.Navigation("Locations");

                    b.Navigation("SideQuests");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Monster", b =>
                {
                    b.Navigation("Actions");

                    b.Navigation("Alignment");

                    b.Navigation("Conditions");

                    b.Navigation("DamageTypes");

                    b.Navigation("Faction");

                    b.Navigation("Languages");

                    b.Navigation("MonsterType");

                    b.Navigation("Reactions");

                    b.Navigation("Senses");

                    b.Navigation("Size");

                    b.Navigation("Skills");

                    b.Navigation("Traits");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Npc", b =>
                {
                    b.Navigation("Actions");

                    b.Navigation("Alignment");

                    b.Navigation("Class");

                    b.Navigation("Conditions");

                    b.Navigation("DamageTypes");

                    b.Navigation("Faction");

                    b.Navigation("Feats");

                    b.Navigation("Languages");

                    b.Navigation("Proficiencies");

                    b.Navigation("Race");

                    b.Navigation("Reactions");

                    b.Navigation("Senses");

                    b.Navigation("Size");

                    b.Navigation("Skills");

                    b.Navigation("SubClass");

                    b.Navigation("SubRace");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Proficiency", b =>
                {
                    b.Navigation("ProficiencyType")
                        .IsRequired();
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.Race", b =>
                {
                    b.Navigation("RacialTraits");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.SubClass", b =>
                {
                    b.Navigation("SubClassFeatures");
                });

            modelBuilder.Entity("DungeonsAndDragons_ToolAndBuilder.Shared.Entities.SubRace", b =>
                {
                    b.Navigation("SubRacialTraits");
                });
#pragma warning restore 612, 618
        }
    }
}
